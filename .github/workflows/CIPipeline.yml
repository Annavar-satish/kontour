# GitHub Action for Laravel
name: Testing Laravel
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.3', '7.4']
        laravel-versions: ['5.8.*','6.*','7.*','8.*']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install with version '73'
        uses: ./Tests/Browser/
        with:
          chrome-version: 73
      - if: runner.os == 'Ubuntu'
        run: chrome --version        
      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader
          composer update
          composer fund

      - name: Prepare the application
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
      - name: Create Database
        run: |
           mkdir -p database
           touch database/database.sqlite        

      - name: Test with phpunit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit --coverage-text
      - name: Test with phpcs
        run: vendor/bin/phpcs
